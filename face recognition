import numpy as np
import cv2
face_eye = cv2.CascadeClassifier('C:/Prabal/face recognition/data/haarcascade_eye.xml')
face_profile = cv2.CascadeClassifier('C:/Prabal/face recognition/data/haarcascade_frontalface_alt2.xml')
face_smile = cv2.CascadeClassifier('C:/Prabal/face recognition/data/haarcascade_smile.xml')
cap=cv2.VideoCapture(0)
while(True):
    ret,frame=cap.read()
    #converting color to gray
    gray=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
    
    eye =face_eye.detectMultiScale(image=gray, scaleFactor=1.2, minNeighbors=15)
    for(x,y,w,h) in eye:
#         print(x,y,w,h)
        roi_gray=gray[y:y+h, x:x+w]  #(y cord start and y cord end)
        #drwing box 
        color=(255,100,200) #BGR = B=255, G=0 , R=0
        stroke=2
        end_cord_x=x+w
        end_cord_y=y+h
        cv2.rectangle(frame,(x,y),(end_cord_x,end_cord_y),color,stroke)
        
    faces=face_profile.detectMultiScale(image=gray, scaleFactor=1.2, minNeighbors=10)
    for(x,y,w,h) in faces:
#         print(x,y,w,h)
        roi_gray=gray[y:y+h, x:x+w]  #(y cord start and y cord end)
        #save selected face
        cv2.imwrite('img.png',roi_gray)
        #drwing box 
        color=(255,100,200) #BGR = B=255, G=0 , R=0
        stroke=2
        end_cord_x=x+w
        end_cord_y=y+h
        cv2.rectangle(frame,(x,y),(end_cord_x,end_cord_y),color,stroke)
        
    smile=face_smile.detectMultiScale(image=gray,scaleFactor=1.7,minNeighbors=15)
    for(x,y,w,h) in smile:
#         print(x,y,w,h)
        roi_gray=gray[y:y+h, x:x+w]  #(y cord start and y cord end)
        #drwing box 
        color=(255,100,200) #BGR = B=255, G=0 , R=0
        stroke=2
        end_cord_x=x+w
        end_cord_y=y+h
        cv2.rectangle(frame,(x,y),(end_cord_x,end_cord_y),color,stroke)
    
    #display result frame
    cv2.imshow('frame',frame)
    if cv2.waitKey(20) & 0xff == ord('q'):
        break
cap.release()
cv2.destroyAllWindows()
